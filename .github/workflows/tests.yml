# This workflow runs the typescript implementation unit tests
name: tests
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch: {}
jobs:
    build-37:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: docker build . --target=test --build-arg PYTHON_VERSION=${PYTHON_VERSION}
              env:
                  PYTHON_VERSION: "3.7"
    build-38:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: docker build . --target=test --build-arg PYTHON_VERSION=${PYTHON_VERSION}
              env:
                  PYTHON_VERSION: "3.8"
    build-39:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: docker build . --target=test --build-arg PYTHON_VERSION=${PYTHON_VERSION}
              env:
                  PYTHON_VERSION: "3.9"
    build-310:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: docker build . --target=test --build-arg PYTHON_VERSION=${PYTHON_VERSION}
              env:
                  PYTHON_VERSION: "3.10"

    # Builds to validate Ubuntu PPA
    build-37-ppa:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: |
                  docker build . -f ppa.dockerfile -t python-ppa --build-arg PYTHON_VERSION=${PYTHON_VERSION}
                  docker build . --target=test --build-arg BASE_IMAGE=python-ppa --build-arg RUN_FMT=false
              env:
                  PYTHON_VERSION: "3.7"
    build-38-ppa:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: |
                  docker build . -f ppa.dockerfile -t python-ppa --build-arg PYTHON_VERSION=${PYTHON_VERSION}
                  docker build . --target=test --build-arg BASE_IMAGE=python-ppa --build-arg RUN_FMT=false
              env:
                  PYTHON_VERSION: "3.8"
    build-39-ppa:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: |
                  docker build . -f ppa.dockerfile -t python-ppa --build-arg PYTHON_VERSION=${PYTHON_VERSION}
                  docker build . --target=test --build-arg BASE_IMAGE=python-ppa --build-arg RUN_FMT=false
              env:
                  PYTHON_VERSION: "3.9"
    build-310-ppa:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: |
                  docker build . -f ppa.dockerfile -t python-ppa --build-arg PYTHON_VERSION=${PYTHON_VERSION}
                  docker build . --target=test --build-arg BASE_IMAGE=python-ppa --build-arg RUN_FMT=false
              env:
                  PYTHON_VERSION: "3.10"

    # Builds to validate alternate versions of protobuf
    build-38-pb319:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests
              run: docker build . --target=test --build-arg PYTHON_VERSION=${PYTHON_VERSION} --build-arg PROTOBUF_VERSION=">=3.19.0,<3.20"
              env:
                  PYTHON_VERSION: "3.8"